@page "/ConsultaVentas"
@using ProyectoFinal_PA2.DAL;

<CascadingAuthenticationState>
    <AuthorizeView>
        <NotAuthorized>
            <div class="card text-center">
                <div class="card-header">
                    No Autorizado
                </div>
                <div class="card-body">
                    <h5 class="card-title">Atención</h5>
                    <p>Debe iniciar sesion para poder acceder a estas opciones</p>
                    <a href="MenuConsultas" class="btn btn-primary">Ir al Menú</a>
                </div>
            </div>
        </NotAuthorized>
    </AuthorizeView>
</CascadingAuthenticationState>


@if (AuthenticationStateProvider.GetAuthenticationStateAsync().Result.User.Identity.IsAuthenticated && TipoUsuario)
{
    <h3>Consulta Ventas</h3>
    <div id="PrincipalContainer" class="card">

        <div class="row">

            @*Desde*@
            <div class="form-group col-2">
                <label>Desde</label>
                <input type="date" class="form-control" @bind="Desde" />
            </div>

            @*Hasta*@
            <div class="form-group col-2">
                <label>Hasta</label>
                <input type="date" class="form-control" @bind="Hasta" />
            </div>

            <div class="form-group col-2">
                <label>Filtro</label>
                <select @bind="opcion" class="form-control">
                    <option value="0" disabled>Elija una opcion</option>
                    <option value="1">TODO</option>
                    <option value="2">Venta Id</option>
                    <option value="3">Cliente Id</option>
                    <option value="4">Empleado Id</option>
                    <option value="5">Fecha de Venta</option>
                    <option value="6">Usuario Id</option>
                    <option value="7">Total</option>
                </select>
            </div>

            <div class="form-group col-2">
                <label>Criterio</label>
                <input type="text" @bind="criterio" class="form-control" />
            </div>

            <div class="form-group col-2">
                <button class="btn btn-primary" @onclick="MostrarDatos">Consultar</button>
            </div>

            <div class="form-group col-2">
                <a class="btn btn-primary" href="/VentasReporte">Ir a reporte</a>
            </div>
        </div>
    </div>

        @if (lista == null)
        {
            <h3>No existen usuarios en la base de datos</h3>
        }
        else
        {
            <table class="table table-dark" style="margin-top: 5px;">
                <thead>
                    <tr>
                        <th>Venta Id</th>
                        <th>Cliente Id</th>
                        <th>Empleado Id</th>
                        <th>Fecha Emision</th>
                        <th>Usuario Id</th>
                        <th>Sub Total/</th>
                        <th>Descuento/</th>
                        <th>ITBIS/</th>
                        <th>Total/</th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var list in lista)
                    {
                        <tr>
                            <td>@list.VentaId </td>
                            <td>@list.ClienteId </td>
                            <td>@list.EmpleadoId </td>
                            <td>@list.FechaEmision</td>
                            <td>@list.UsuariosId</td>
                            <td>@list.SubTotal</td>
                            <td>@list.Descuento</td>
                            <td>@list.ITBIS</td>
                            <td>@list.Total</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        <nav aria-label="...">
            <ul class="pagination pagination-lg">

                <li class="page-item Azul"><a class="page-link Azul" @onclick="Anterior"> ◄ </a></li>
                @for (int i = 1; i <= totaldepaginas; i++)
                {
                    <li class="page-item Azul"><a class="page-link Azul" @onclick="OnInitialized" href="ConsultaVentas/@i">@i</a></li>
                }
                <li class="page-item Azul"><a class="page-link Azul" @onclick="Saltar"> ► </a></li>
            </ul>
        </nav>
        }

        @code {

            List<Ventas> lista = new List<Ventas>();
    private string opcion = "0";
        private string criterio = "";
        private bool TipoUsuario;
        private DateTime Desde = DateTime.Now;
        private DateTime Hasta = DateTime.Now;

        @*Paginado*@
        public int I { get; set; }
        double conteo = 0;
        double totaldepaginas = 0;
        Paginando paginacion = new Paginando();
        Contexto contexto = new Contexto();
        public int Contador { get; set; }

        protected override void OnInitialized()
        {
            lista = VentasBLL.GetList(x => true);
            TipoUsuario = GetAuthorization();
            conteo = contexto.Categorias.Count();
            totaldepaginas = Math.Ceiling(conteo / paginacion.CantidadMostrar);
            this.lista = contexto.Ventas.Take(paginacion.CantidadMostrar).ToList();
        }

        private void Anterior()
        {
            Contador -= paginacion.Pagina;
            if (Contador <= totaldepaginas)
            {
                Contador = 0;
            }

            lista = contexto.Ventas
            .Skip(Contador * paginacion.CantidadMostrar)
            .Take(paginacion.CantidadMostrar)
            .ToList();
        }

        private void Saltar()
        {
            Contador += paginacion.Pagina;
            if (Contador >= totaldepaginas)
            {
                Contador = 0;
            }

            lista = contexto.Ventas
            .Skip(Contador * paginacion.CantidadMostrar)
            .Take(paginacion.CantidadMostrar)
            .ToList();
        }

        private void MostrarDatos()
        {
            int elegido = Convert.ToInt32(opcion);

            if (string.IsNullOrWhiteSpace(criterio))
            {
                lista = VentasBLL.GetList(x => true);
            }
            else
            {
                switch (elegido)
                {
                    case 0:
                        {
                            toast.ShowError("¡Opcion incorrecta!");
                            break;
                        }
                    case 1:
                        {
                            lista = VentasBLL.GetList(x => true);
                        }
                        break;

                    case 2:
                        {
                            int id;
                            id = Convert.ToInt32(criterio);
                            lista = VentasBLL.GetList(x => x.VentaId == id);
                        }
                        break;

                    case 3:
                        {
                            int id;
                            id = Convert.ToInt32(criterio);
                            lista = VentasBLL.GetList(x => x.ClienteId == id);
                        }
                        break;

                    case 4:
                        {
                            int id;
                            id = Convert.ToInt32(criterio);
                            lista = VentasBLL.GetList(x => x.EmpleadoId == id);
                        }
                        break;

                    case 5:
                        {
                            lista = VentasBLL.GetList(c => c.FechaEmision.Date >= Desde.Date && c.FechaEmision.Date <= Hasta.Date).ToList();
                        }
                        break;

                    case 6:
                        {
                            int id;
                            id = Convert.ToInt32(criterio);
                            lista = VentasBLL.GetList(x => x.UsuariosId == id);
                        }
                        break;

                    case 7:
                        {

                            decimal total;
                            total = Convert.ToDecimal(criterio);
                            lista = VentasBLL.GetList(x => x.Total == total);
                        }
                        break;
                }
                lista = lista.Where(c => c.FechaEmision.Date >= Desde.Date && c.FechaEmision.Date <= Hasta.Date).ToList();
            }
        }

        private bool GetAuthorization()
        {
            bool acceso;

            if (AuthenticationStateProvider.GetAuthenticationStateAsync().Result.User.IsInRole("Administrador")
                || AuthenticationStateProvider.GetAuthenticationStateAsync().Result.User.IsInRole("Empleado"))
                acceso = true;
            else
                acceso = false;

            return acceso;
        }

        }
