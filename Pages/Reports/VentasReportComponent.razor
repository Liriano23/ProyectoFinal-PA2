@page "/VentasReporte"
@inject IJSRuntime js

<CascadingAuthenticationState>
    <AuthorizeView>
        <NotAuthorized>
            <div class="card text-center">
                <div class="card-header">
                    No Autorizado
                </div>
                <div class="card-body">
                    <h5 class="card-title">Atención</h5>
                    <p>Debe iniciar sesion para poder acceder a estas opciones</p>
                    <a href="LogInPage" class="btn btn-primary">Ir a menu Log-In</a>
                </div>
                <div class="card-footer text-muted">
                </div>
            </div>
        </NotAuthorized>

        <Authorized>
            @if (!TipoUsuario)
            {
                <div class="card text-center">
                    <div class="card-header">
                        No Autorizado
                    </div>
                    <div class="card-body">
                        <h5>Atención</h5>
                        <p>Debe tener acceso de administrador para poder acceder a estas opciones.</p>
                        <a href="/" class="btn btn-primary">Volver al Menú principal</a>
                    </div>
                </div>
            }
        </Authorized>
    </AuthorizeView>
</CascadingAuthenticationState>

@if (AuthenticationStateProvider.GetAuthenticationStateAsync().Result.User.Identity.IsAuthenticated && TipoUsuario)
{
    <div style="margin-top:5px;">
        <h1>Reporte de Ventas</h1>
        <button class="btn btn-primary" @onclick="ImprimirReportes">Hacer Click Para Reporte</button>
    </div>

    @if (Data is { })
    {
        <form>
            <object data="@pdfContent" width="1000" height="1000"></object>
        </form>
    }
}
<img src="css/Images/Logo1.JPEG " title="LogoEmpresa" alt="Logo de la empresa" />

@code {
    private bool TipoUsuario;
    List<Ventas> lista = new List<Ventas>();

    byte[] Data;
    string pdfContent = "";

    protected override void OnInitialized()
    {
        TipoUsuario = AuthenticationStateProvider.GetAuthenticationStateAsync().Result.User.IsInRole("Administrador");

    }

    private async Task ImprimirReportes()
    {

        ProyectoFinal_PA2.Reportes.VentasReport ven = new Reportes.VentasReport();
        lista = VentasBLL.GetList(x => true);
        Data = ven.Reporte(lista);

        pdfContent = "data:application/pdf;base64,";
        pdfContent += System.Convert.ToBase64String(Data);


    }
}
