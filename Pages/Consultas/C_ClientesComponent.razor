@page "/ConsultaClientes"

<CascadingAuthenticationState>
    <AuthorizeView>
        <NotAuthorized>
            <div class="card text-center">
                <div class="card-header">
                    No Autorizado
                </div>
                <div class="card-body">
                    <h5 class="card-title">Atención</h5>
                    <p>Debe iniciar sesion para poder acceder a estas opciones</p>
                    <a href="MenuConsultas" class="btn btn-primary">Ir al Menú</a>
                </div>
            </div>
        </NotAuthorized>

        <Authorized>
            @if (!TipoUsuario)
            {
                <div class="card text-center">
                    <div class="card-header">
                        No Autorizado
                    </div>
                    <div class="card-body">
                        <h5>Atención</h5>
                        <p>Debe tener acceso de administrador para poder acceder a estas opciones.</p>
                        <a href="MenuConsultas" class="btn btn-primary">Volver al Menú anterior</a>
                    </div>
                </div>
            }
        </Authorized>
    </AuthorizeView>
</CascadingAuthenticationState>


@if (AuthenticationStateProvider.GetAuthenticationStateAsync().Result.User.Identity.IsAuthenticated && TipoUsuario)
{
    <h3>Consulta Clientes</h3>
    <div class="row">
        <div class="col-1">
            <label>Filtro</label>
        </div>

        <div class="col-sm">
            <select @bind="opcion" class="form-control">

                <option value="0">Todo</option>
                <option value="1">Clientes Id</option>
                <option value="2">Nombres</option>
                <option value="3">Apellido</option>
                <option value="4">Cedula</option>
                <option value="5">Sexo</option>
                <option value="6">Dirección</option>
                <option value="7">Telefónio</option>
                <option value="8">Celular</option>
                <option value="9">Email</option>
                <option value="10">Fecha Nacimiento</option>
                <option value="11">Fecha Ingreso</option>
                <option value="12">Usuario Id</option>
            </select>
        </div>

        <div class="col-1">
            <label>Criterio</label>
        </div>

        <div class="col">
            <input type="text" @bind="criterio" class="form-control" />
        </div>

        <div class="col-lg">
            <button class="btn btn-primary" @onclick="MostrarDatos">Consultar</button>
        </div>
    </div>

    @if (lista == null)
    {
        <h3>No existen usuarios en la base de datos</h3>
    }
    else
    {
        <table class="table table-dark" style="margin-top: 5px;">
            <thead>
                <tr>
                    <th>Cliente Id</th>
                    <th>Nombres</th>
                    <th>Apellidos</th>
                    <th>Cedula</th>
                    <th>Sexo</th>
                    <th>Direcció</th>
                    <th>Telefóno</th>
                    <th>Celular</th>
                    <th>Email</th>
                    <th>Fecha Nacimiento</th>
                    <th>Fecha ingreso</th>
                    <th>Usuario Id</th>
                </tr>
            </thead>

            <tbody>
                @foreach (var list in lista)
                {
                    <tr>
                        <td>@list.ClienteId</td>
                        <td>@list.Nombres</td>
                        <td>@list.Apellidos</td>
                        <td>@list.Cedula</td>
                        <td>@list.Sexo</td>
                        <td>@list.Direccion</td>
                        <td>@list.Telefono</td>
                        <td>@list.Celular</td>
                        <td>@list.Email</td>
                        <td>@list.FechaNacimiento</td>
                        <td>@list.FechaIngreso</td>
                        <td>@list.UsuariosId</td>
                    </tr>
                }
            </tbody>
        </table>
    }
}

@code {

    List<Clientes> lista = new List<Clientes>();
    private string opcion = "0";
    private string criterio = "";
    private bool TipoUsuario;

    protected override void OnInitialized()
    {
        lista = ClientesBLL.GetList(x => true);
        TipoUsuario = GetAuthorization();

    }

    private void MostrarDatos()
    {
        int elegido = Convert.ToInt32(opcion);

        if (criterio.Trim().Length > 0 && criterio != "")
        {
            switch (elegido)
            {
                case 0:
                    {
                        lista = ClientesBLL.GetList(x => true);
                    }
                    break;

                case 1:
                    {
                        int id;
                        id = Convert.ToInt32(criterio);
                        lista = ClientesBLL.GetList(x => x.ClienteId == id);
                    }
                    break;

                case 2:
                    {
                        lista = ClientesBLL.GetList(x => x.Nombres == criterio);
                    }
                    break;

                case 3:
                    {
                        lista = ClientesBLL.GetList(x => x.Apellidos == criterio);
                    }
                    break;

                case 4:
                    {
                        lista = ClientesBLL.GetList(x => x.Cedula == criterio);
                    }
                    break;

                case 5:
                    {
                        lista = ClientesBLL.GetList(x => x.Sexo == criterio);
                    }
                    break;

                case 6:
                    {
                        lista = ClientesBLL.GetList(x => x.Direccion == criterio);
                    }
                    break;

                case 7:
                    {
                        lista = ClientesBLL.GetList(x => x.Telefono == criterio);
                    }
                    break;

                case 8:
                    {
                        lista = ClientesBLL.GetList(x => x.Celular == criterio);
                    }
                    break;

                case 9:
                    {
                        lista = ClientesBLL.GetList(x => x.Email == criterio);
                    }
                    break;

                case 10:
                    {
                        //lista = ClientesBLL.GetList(x => x.FechaNacimiento == criterio);
                    }
                    break;

                case 11:
                    {
                        //lista = ClientesBLL.GetList(x => x.FechaIngreso == criterio);
                    }
                    break;

                case 12:
                    {
                        int id;
                        id = Convert.ToInt32(criterio);
                        lista = ClientesBLL.GetList(x => x.UsuariosId == id);
                    }
                    break;
            }
        }
        else if (criterio == "")
        {
            lista = ClientesBLL.GetList(x => true);
        }
        else
        {
            lista = ClientesBLL.GetList(x => true);
        }
    }

    private bool GetAuthorization()
    {
        bool acceso;

        if (AuthenticationStateProvider.GetAuthenticationStateAsync().Result.User.IsInRole("Administrador")
            || AuthenticationStateProvider.GetAuthenticationStateAsync().Result.User.IsInRole("Empleado"))
            acceso = true;
        else
            acceso = false;

        return acceso;
    }

}